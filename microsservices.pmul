@startuml contexto
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
AddRelTag("async", $lineStyle = DashedLine())
SHOW_PERSON_PORTRAIT()

title "Painkiller: Projeto A3Data"
Person(administrador_hospital,"Administrador do hospital","Gerencia aplicação")

System_Boundary(gateway, "Painkiller") {
    Container(backend_catalogo_admin,"Backend: Admin do Catálogo de Vídeos","Linguagem livre","Gerencia o catálogo de vídeos, incluindo as categorias e gêneros")
    Container(backend_catalogo_admin_database,"Database Admin do Catálogo de Vídeos","MySQL","Armazena dados do catálogo de vídeos")
    Rel(backend_catalogo_admin,backend_catalogo_admin_database,"Interage com usando","TCP")
    
    Container(backend_measurement_admin,"Backend: Admin do Catálogo de Vídeos","Linguagem livre","Gerencia o catálogo de vídeos, incluindo as categorias e gêneros")
    Container(elasticsearch_api_catalogo,"Database API do Catálogo","Elasticsearch","Armazena dados dos vídeos, gêneros, cast members e categorias")
    Rel(backend_measurement_admin,elasticsearch_api_catalogo,"Interage com usando","TCP")
    Container(apache_kafka,"Apache Kafka","Message Broker","Armazena e serve dados vindos do kafka Connect")
    Container(kafka_connect,"Kafka Connect","Integração de dados","Serviço de replicação de dados do catálogo")
    Rel(kafka_connect,elasticsearch_api_catalogo,"Envia dados do catálogo de vídeos via","Sink Elasticsearch",$tags = "async")
    Rel(kafka_connect,backend_catalogo_admin_database,"Copia dados usando connector","Debezium MySQL",$tags = "async")
    Rel(kafka_connect,apache_kafka,"Interage com via","Protocolo Kafka",$tags = "async")


}
@enduml
